---
title: "In-Class Ex1"
editor: visual
---

# Overview

In this In-Class Ex1 , we will learn how to compute spatial weights using R. Following will be the learning at the end of this module:

-   Importing spatial and csv file data: **sf** and **readr** package

-   Relational join : **dplyr** package

-   Spatial weight computation: **spdep** package

-   Calculation of spatially lagged variables: **spdep** package

# Getting Started

The code chunk below will install and load tidyverse and sf packages.

```{r}
pacman::p_load(sf,tidyverse,spdep,tmap)
```

# Getting the data into R environment

Importing polygon features

This code chunk will import ESRI shapefile into R.

## Importing Hunan Data

```{r}
hunan = st_read(dsn="data/geospatial/", 
                layer="Hunan")
```

## Importing data attribute in csv

```{r}
hunan2012= read_csv("data/aspatial/Hunan_2012.csv")
```

## Perform relational join

Update the attribute table of *hunan*'s SpatialPolygonsDataFrame with the attribute fields of *hunan2012* dataframe

```{r}
hunan <- left_join(hunan,hunan2012)
```

# Visualizing Regional Development Indicator

Preparation of basemap and choropleth map showing the distribution of GDPPC 2012.

Using, qtm() of **tmap** package.

```{r}
basemap <- tm_shape(hunan) +
  tm_polygons() +
  tm_text("NAME_3", size=0.5)

gdppc <- qtm(hunan, "GDPPC")
tmap_arrange(basemap, gdppc, asp=1, ncol=2)
```

# Computing Contiguity Spatial Weights

In this section, Computing Contiguity Spatial Weights are computed using [*poly2nb()*](https://r-spatial.github.io/spdep/reference/poly2nb.html) of **spdep** package. This function builds a neighbours list based on regions with contiguous boundaries. "Queen" arguement is passed that takes TRUE and FALSE as options.

**Default is set to TRUE, that is, if you don't specify queen = FALSE this function will return a list of first order neighbours using the Queen criteria.**

## Computing (QUEEN) contiguity based neighbours

Queen contiguity weight matrix:

```{r}
wm_q <- poly2nb(hunan, queen=TRUE)
summary(wm_q)
```

The summary report is as follow:

-   Number of regions: 88 area units

-   There is only 1 region with maximum number neighbors, 11 links

-   There are 2 regions with minimum number of neighbors, 1 link.

For each polygon in our polygon object, *wm_q* lists all neighboring polygons:

```{r}
wm_q[[1]]
```

Above code chunk indicates polygon 1 has 5 neighbors. TO get the name of country that depicts polygon 1 following code chunk is used:

```{R}
hunan$County[1]
```

To reveal the neighbors of "Anxiang", following code chunk is used:

```{r}
hunan$NAME_3[c(2,3,4,57,85)]
```

GDPPC for the above 5 countries can be retrieved using following code chunk:

```{r}
nb1 <- wm_q[[1]]
nb1 <- hunan$GDPPC[nb1]
nb1
```

To get the complete weight matrix, **str()** function is used:

```{r}
str(wm_q,11)
```
